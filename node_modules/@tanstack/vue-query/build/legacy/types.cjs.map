{"version":3,"sources":["../../src/types.ts"],"sourcesContent":["import type {\n  DefaultError,\n  DehydrateOptions,\n  HydrateOptions,\n  MutationCache,\n  MutationObserverOptions,\n  OmitKeyof,\n  QueryCache,\n  QueryObserverOptions,\n} from '@tanstack/query-core'\nimport type { ComputedRef, Ref, UnwrapRef } from 'vue-demi'\n\ntype Primitive = string | number | boolean | bigint | symbol | undefined | null\ntype UnwrapLeaf =\n  | Primitive\n  | Function\n  | Date\n  | Error\n  | RegExp\n  | Map<any, any>\n  | WeakMap<any, any>\n  | Set<any>\n  | WeakSet<any>\n\nexport type MaybeRef<T> = Ref<T> | ComputedRef<T> | T\n\nexport type MaybeRefOrGetter<T> = MaybeRef<T> | (() => T)\n\nexport type MaybeRefDeep<T> = MaybeRef<\n  T extends Function\n    ? T\n    : T extends object\n      ? {\n          [Property in keyof T]: MaybeRefDeep<T[Property]>\n        }\n      : T\n>\n\nexport type NoUnknown<T> = Equal<unknown, T> extends true ? never : T\n\nexport type Equal<TTargetA, TTargetB> =\n  (<T>() => T extends TTargetA ? 1 : 2) extends <T>() => T extends TTargetB\n    ? 1\n    : 2\n    ? true\n    : false\n\nexport type DeepUnwrapRef<T> = T extends UnwrapLeaf\n  ? T\n  : T extends Ref<infer U>\n    ? DeepUnwrapRef<U>\n    : T extends {}\n      ? {\n          [Property in keyof T]: DeepUnwrapRef<T[Property]>\n        }\n      : UnwrapRef<T>\n\nexport type ShallowOption = {\n  /**\n   * Return data in a shallow ref object (it is `false` by default). It can be set to `true` to return data in a shallow ref object, which can improve performance if your data does not need to be deeply reactive.\n   */\n  shallow?: boolean\n}\n\nexport interface DefaultOptions<TError = DefaultError> {\n  queries?: OmitKeyof<QueryObserverOptions<unknown, TError>, 'queryKey'> &\n    ShallowOption\n  mutations?: MutationObserverOptions<unknown, TError, unknown, unknown> &\n    ShallowOption\n  hydrate?: HydrateOptions['defaultOptions']\n  dehydrate?: DehydrateOptions\n}\n\nexport interface QueryClientConfig {\n  queryCache?: QueryCache\n  mutationCache?: MutationCache\n  defaultOptions?: DefaultOptions\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}